---
- name: Ensure user is created
  ansible.builtin.user:
    name: "{{ vaultwarden_user }}"
    state: present
    system: true
  register: vaultwarden_user_res

- name: Ensure vaultwarden config directory exists and is owned by vaultwarden user
  ansible.builtin.file:
    path: "{{ vaultwarden_config_dir }}"
    state: directory
    mode: "0755"
    owner: "{{ vaultwarden_user_res.uid }}"
    group: "{{ vaultwarden_user_res.group }}"
    recurse: true

- name: Ensure configuration is templated
  ansible.builtin.copy:
    content: "{{ vaultwarden_config_merged | to_nice_json }}"
    dest: "{{ vaultwarden_config_file }}"
    mode: "0755"
    owner: "{{ vaultwarden_user_res.uid }}"
    group: "{{ vaultwarden_user_res.group }}"
  notify: "restart-vaultwarden"

- name: Ensure vaultwarden container image is present
  community.docker.docker_image:
    name: "{{ vaultwarden_container_image_reference }}"
    state: present
    source: pull
    force_source: "{{ vaultwarden_container_image_tag | default(false, true) }}"
  register: vaultwarden_container_image_pull
  until: vaultwarden_container_image_pull is succeeded
  retries: 5
  delay: 3

- name: Ensure vaultwarden container image is running
  community.docker.docker_container:
    image: "{{ vaultwarden_container_image_reference }}"
    name: "{{ vaultwarden_container_name }}"
    env: "{{ vaultwarden_container_env_merged }}"
    user: "{{ vaultwarden_user_res.uid }}:{{ vaultwarden_user_res.group }}"
    ports: "{{ vaultwarden_container_ports | default(omit, true) }}"
    networks: "{{ vaultwarden_container_networks | default(omit, true) }}"
    etc_hosts: "{{ vaultwarden_container_etc_hosts | default(omit, true) }}"
    labels: "{{ vaultwarden_container_labels_merged }}"
    volumes: "{{ vaultwarden_container_volumes_merged }}"
    restart_policy: "{{ vaultwarden_container_restart_policy }}"
    state: started
